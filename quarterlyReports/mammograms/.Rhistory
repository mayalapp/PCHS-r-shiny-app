summary(vallino_lm2)
vallino_lm = lm(TotalBM*100 ~ numLoggers+K+as.numeric(variableValue), data = enfData_vallino)
summary(vallino_lm)
vallino_lm2 = lm(TotalBM*100 ~ numLoggers+as.numeric(variableValue), data = enfData_vallino%>%filter(variableValue != 100))
summary(vallino_lm2)
monitoring_lm = lm(TotalBM*100 ~ K+as.numeric(variableValue), data = monitoringData)
summary(monitoring_lm)
sanction_lm = lm(TotalBM*100 ~ K+as.numeric(variableValue), data = sanctionData)
summary(sanction_lm)
monitoring_lm = lm(TotalBM*100 ~ K+as.numeric(variableValue), data = monitoringData)
summary(monitoring_lm)
sanction_lm = lm(TotalBM*100 ~ K+as.numeric(variableValue), data = sanctionData)
summary(sanction_lm)
vallino_lm = lm(TotalBM*100 ~ numLoggers+K+as.numeric(variableValue), data = enfData_vallino)
summary(vallino_lm)
shiny::runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
as.Date("December 20201")
as.Date("December 2021")
as.Date("12/01/2020", format = "%m/%d/%Y")
date_labels = "%b %Y",
#labels=date_format("%b-%Y"),
#limits = c(date_summary$min_date,date_summary$max_date + weeks(6)))+ #extend xlim so labels aren't cut off
limits = c(date_summary$min_date,date_summary$max_date + months(2)))+ #extend xlim so labels aren't cut off
geom_dl(aes(label = location), method = list(dl.trans(x = x + .3), "last.qp", cex = 1.2, fontface = "bold")) +
#scale_color_brewer(palette = "Set3")
scale_color_manual(values = plot_colors)+
geom_vline(as.Date("12/01/2020", format = "%m/%d/%Y"), color = "grey")
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
output$debug = renderDataTable({data()})
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
runApp('Documents/dad_data_project/app')
shiny::runApp('Documents/dad_data_project/general-app')
runApp('Documents/dad_data_project/PCHS_app')
runApp('Documents/dad_data_project/PCHS_app')
runApp('Documents/dad_data_project/PCHS_app')
runApp('Documents/dad_data_project/PCHS_app')
runApp('Documents/dad_data_project/PCHS_app')
runApp('Documents/dad_data_project/general-app')
shiny::runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/general-app')
library(readxl)
X01_01_21_PCHS_Mammogram_screening_Rate_Report <- read_excel("Documents/coding_projects/dad_data_project/quarterlyReports/mammograms_edited/01-01-21 PCHS Mammogram screening Rate Report.xlsx")
View(X01_01_21_PCHS_Mammogram_screening_Rate_Report)
testData = X01_01_21_PCHS_Mammogram_screening_Rate_Report
extract_patientNotes(testData)
View(testData)
library(readxl)
testData <- read_excel("Documents/coding_projects/dad_data_project/quarterlyReports/mammograms_edited/10-01-20 PCHS Mammogram screening Rate Report.xlsx")
extract_patientNotes(testData)
quarterly_report[2,1]
testData[2,1]
View(testData)
library(readxl)
testData <- read_excel("Documents/coding_projects/dad_data_project/quarterlyReports/mammograms_edited/10-01-20 PCHS Mammogram screening Rate Report.xlsx", col_names = FALSE)
View(testData)
extract_patientNotes(testData)
View(testData)
View(testData)
View(testData)
View(testData)
extract_patientNotes = function(quarterly_report){
patient_notes = ""
if(quarterly_report[2,1] == "Notes"){
i = 2
while(!is.na(quarterly_report[i,2])){
patient_notes = paste(patient_notes,quarterly_report[i,2], sep = "\n")
}
}
return(patient_notes)
}
extract_patientNotes(testData)
extract_patientNotes = function(quarterly_report){
patient_notes = ""
if(quarterly_report[2,1] == "Notes"){
i = 2
while(!is.na(quarterly_report[i,2])){
patient_notes = paste(patient_notes,quarterly_report[i,2], sep = "\n")
i = i + 1
}
}
return(patient_notes)
}
extract_patientNotes(testData)
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp()
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
source('~/.active-rstudio-document', echo=TRUE)
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
shiny::runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
combined_plot_width = 900#1250
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
grepl("t", "test")
grepl("f", "test")
shiny::runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/general-app')
knitr::opts_chunk$set(echo = TRUE, fig.show="hold", out.width="50%", message = FALSE, warning = FALSE)
library(shiny)
library(tidyverse)
library(readxl)
library(gridExtra)
library(patchwork)
library(shinyFiles)
library(directlabels)
library(colorspace)
# setting up axes for plots - note: titles of plots based on params$report.type
ax.date = expression(atop(bold("Date"), "   "))
ax.rate= expression(atop("   ", paste(params$report.type,"Rate (%)")))
ax.patients = "Number of Patients"
ax.location = "Site"
# create variable for title of All patients plots
title.patients = ""
if(params$report.type == "Colorectal Cancer Screening"){
title.patients = "Patients 50-75 Years Old"
}else if(params$report.type == "Cervical Cancer Screening"){
title.patients = "Female Patients 21-64 Years Old"
}else if(params$report.type == "Mammogram Screening"){
title.patients = "Female Patients 50-74 Years Old"
}
# set plot options for all plots to abide by
plot_options = theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
plot.title = element_text(size = 14, face = "bold"),
legend.text = element_text(size=12),
legend.title = element_text(size=14, face = "bold"))
margin_val = 2.5
plot_colors = darken(c("#000000", "#80CDC1", "#B8E186", "#9fb88c", "#92C5DE", "#DFC27D", "#FDB863",  "#EA9999", "#7686c4", "#D5A6BD", "#A2C4C9", "#D5A6BD", "#F4A582"))
#used to run rmarkdown with parameters
rmarkdown::render("cancer_report.Rmd", params = list(
report.type = "Colorectal Cancer Screening",
rate.data = clean_data,
label.months = 3
))
#used to run rmarkdown with parameters
rmarkdown::render("rate_report.Rmd", params = list(
report.type = "Colorectal Cancer Screening",
rate.data = clean_data,
label.months = 3
))
runApp('Documents/coding_projects/dad_data_project/general-app')
test = "test"
text(test)
runApp('Documents/coding_projects/dad_data_project/general-app')
ax.rate= paste(test, expression(bold("Rate (%)")))
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
shiny::runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
loc_data
q
runApp()
runApp()
runApp()
help
help
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
View(loc_data)
help()
help
View(loc_data)
View(loc_data)
View(loc_data)
View(loc_data)
View(loc_data)
View(loc_data)
p
View(p)
print(p)
p
print(p)
any(is.na(p$data))
print(p)
save(p, "testPlot.RData")
save(p, file = "testPlot.RData")
getwd()
View(p)
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
View(p)
View(loc_data)
View(loc_data)
View(loc_data)
View(p)
View(p)
save(p, "testPlot.RData")
View(p)
p
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
View(loc_data)
View(p)
View(p)
save(p, "testPlot.RData")
View(p)
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
View(loc_data)
View(p)
View(p)
save(p, file ="testPlot.RData")
View(p)
View(p)
save(p, file ="testPlot.RData")
View(p)
save(p, file ="testPlot.RData")
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
max_patients
max_patients
View(max_patients)
View(temp_data)
View(max_range)
runApp()
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
shiny::runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
unit(1, "cm")
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/general-app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/general-app')
shiny::runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
show_col(plot_colors)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot_colors = darken(c("#000000", "#80CDC1", "#B8E186", "#9fb88c", "#92C5DE", "#DFC27D", "#FDB863",  "#EA9999", "#7686c4", "#D5A6BD", "#F4A582" , '#e6194B', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#42d4f4', '#f032e6', '#bfef45', '#fabed4', '#469990', '#dcbeff', '#9A6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#a9a9a9', 'darkgreen', 'darkmagenta', 'aquamarine3', 'darksalmon'))
source('~/.active-rstudio-document', echo=TRUE)
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
shiny::runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
df = data.frame(x = c(1,2,3), y = c(2,5,6))
df
df$x
df$x[1]
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
max_range
head(temp_data)
y_ranges
y_ranges
y_ranges
runApp()
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/general-app')
shiny::runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/general-app')
tempReport <- file.path(tempdir(), "rate_report.Rmd")
tempReport
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp()
q
q
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/PCHS_app')
runApp('Documents/coding_projects/dad_data_project/general-app')
TRUE || FALSE
# finds row indices where a word is located in a df
# inputs: df - raw df of data from we are interested in searching
#        wrd - word we are interested in finding
# outputs: vector of indices in quart_report which rows of df contain wrd, sorted by which index comes first
find_word_row <- function(df, wrd){
temp = which(grepl(wrd, df, ignore.case = TRUE)) # find which columns contain the word wrd
item_index = c() # initialize row index
# for every column with the word "item", find the row index where it exists
for(i in 1:length(temp)){
# append the row index to our list - only keep unique indicies
item_index = c(item_index, grep(wrd, t(df[i]), ignore.case = TRUE))%>%unique()
}
# return sorted values
return(sort((item_index)))
}
# gets group category (site/provider/etc) for the report from header file
# IMPORTANT: to extract group, first cell of header file must say "Report type"
# inputs: raw quarterly report
# output: name extracted from dataframe - empty string if no name is detected
extract_from_header = function(header_df, x){
string_out = ""
r = find_word_row(header_df, x)
i = r
while(i == r || (is.na(header_df[i,1]) && !is.na(header_df[i,2]))){
patient_notes = paste(patient_notes,header_df[i,2], " ", sep = "\n")
i = i + 1
}
return(string_out)
}
setwd("~/Documents/coding_projects/dad_data_project/quarterlyReports/mammograms")
head_test = read_xlsx("header_file_mammogram.xlsx", col_names = FALSE)
extract_from_header(head_test, "Report title")
!is.na(head_test[1,2])
find_word_row(head_test, "Report type")
!is.na(head_test[1,1])
if( !is.na(head_test[1,1]))
x = 10
x
extract_from_header(head_test, "Report type")
extract_from_header = function(header_df, x){
string_out = ""
r = find_word_row(header_df, x)
i = r
while(i == r || (is.na(header_df[i,1]) && !is.na(header_df[i,2]))){
string_out = paste(string_out,header_df[i,2], " ", sep = "\n")
i = i + 1
}
return(string_out)
}
extract_from_header(head_test, "Report type")
extract_from_header(head_test, "Notes")
extract_from_header(head_test, "Group")
head_test = read_xlsx("header_file_mammogram.xlsx", col_names = FALSE)
extract_from_header(head_test, "Group")
extract_from_header = function(header_df, x){
string_out = ""
r = find_word_row(header_df, x)
r
i = r
while(i == r || (is.na(header_df[i,1]) && !is.na(header_df[i,2]))){
string_out = paste(string_out,header_df[i,2], " ", sep = "\n")
i = i + 1
}
return(string_out)
}
extract_from_header(head_test, "Group")
extract_from_header = function(header_df, x){
string_out = ""
r = find_word_row(header_df, x)
print(r)
i = r
while(i == r || (is.na(header_df[i,1]) && !is.na(header_df[i,2]))){
string_out = paste(string_out,header_df[i,2], " ", sep = "\n")
i = i + 1
}
return(string_out)
}
extract_from_header(head_test, "Group")
extract_from_header(head_test, "x")
test = extract_from_header(head_test, "x")
test find_word_row(head_test, "x")
test =find_word_row(head_test, "x")
test
test == []
length(test)
extract_from_header = function(header_df, x){
string_out = ""
r = find_word_row(header_df, x)
print(r)
if(length(r == 0)){ # check to see if "x" appears anywhere in the header file
i = r
while(i == r || (is.na(header_df[i,1]) && !is.na(header_df[i,2]))){
string_out = paste(string_out,header_df[i,2], " ", sep = "\n")
i = i + 1
}
return(string_out)
}
}
extract_from_header(head_test, "x")
test - extract_from_header(head_test, "x")
test = extract_from_header(head_test, "x")
test
extract_from_header = function(header_df, x){
string_out = ""
r = find_word_row(header_df, x)
if(length(r == 0)){ # check to see if "x" appears anywhere in the header file
i = r
while(i == r || (is.na(header_df[i,1]) && !is.na(header_df[i,2]))){
string_out = paste(string_out,header_df[i,2], " ", sep = "\n")
i = i + 1
}
}
return(string_out)
}
test = extract_from_header(head_test, "x")
test
runApp('~/Documents/coding_projects/dad_data_project/PCHS_app')
runApp('~/Documents/coding_projects/dad_data_project/PCHS_app')
runApp('~/Documents/coding_projects/dad_data_project/PCHS_app')
runApp('~/Documents/coding_projects/dad_data_project/PCHS_app')
runApp('~/Documents/coding_projects/dad_data_project/PCHS_app')
runApp('~/Documents/coding_projects/dad_data_project/PCHS_app')
runApp('~/Documents/coding_projects/dad_data_project/PCHS_app')
runApp('~/Documents/coding_projects/dad_data_project/PCHS_app')
runApp('~/Documents/coding_projects/dad_data_project/general-app')
runApp()
runApp('~/Documents/coding_projects/dad_data_project/general-app')
runApp('~/Documents/coding_projects/dad_data_project/general-app')
